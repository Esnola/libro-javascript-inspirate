-# Parte IV - Un pasito más...

# Anexo: ¡Queda mucho más por aprender!

{:: encoding="utf-8" /}
{footnotes-off}

## Recursos

A lo largo del libro hemos incluido gran cantidad de links para facilitarte recursos para aprender más acerca de conceptos claves.

Hemos recopilado todos los enlaces de manera automática en esta lista de enlaces para vosotros en un solo lugar, *[extras/recursos.md](https://github.com/UlisesGascon/javascript-inspirate/tree/master/extras/recursos.md)* en *[nuestro repositorio](https://github.com/UlisesGascon/javascript-inspirate)*.

## Libros interesantes

{icon=book}
G> #### Deberías leer...
G>
G> - *[JavaScript for PHP Developers: A Concise Guide to Mastering JavaScript by Stoyan Stefanov](https://www.amazon.es/JavaScript-PHP-Developers-Concise-Mastering-ebook/dp/B00CICVLQU/)*
G> - *[You Don't Know JS (book series) by Kyle Simpson](https://github.com/getify/You-Dont-Know-JS)*
G> - *[JavaScript Allongé, the "Six" Edition by Reg “raganwald” Braithwaite](https://leanpub.com/javascriptallongesix)*
G> - *[Effective JavaScript: 68 Specific Ways to Harness the Power of JavaScript by David Herman](https://www.amazon.com/Effective-JavaScript-Specific-Software-Development/dp/0321812182/)*
G> - *[JavaScript for Kids: A Playful Introduction to Programming by Nick Morgan](https://www.amazon.com/JavaScript-Kids-Playful-Introduction-Programming/dp/1593274084/)*
G> - *[Eloquent JavaScript de Marijn Haverbeke](https://www.amazon.es/Eloquent-JavaScript-Modern-Introduction-Programming-ebook/dp/B00QL616UU/)*
G> - *[JavaScript: The Good Parts de Douglas Crockford](https://www.amazon.es/JavaScript-Good-Parts-ebook/dp/B0026OR2ZY)*
G> - *[JavaScript Patterns by Stoyan Stefanov](https://www.amazon.es/JavaScript-Patterns-Stoyan-Stefanov/dp/0596806752)*
G> - *[JavaScript Ninja de John Resig y Bear Bibeault](https://www.amazon.es/JavaScript-Ninja-Anaya-Multimedia-Manning/dp/8441533970)*
G> - *[JavaScript. La Guía Definitiva de David Flanagan](https://www.amazon.es/JavaScript-Definitiva-Anaya-Multimedia-%C2%BFReilly/dp/8441522022)*
G> - *[Código Limpio de Robert C. Martin](http://www.casadellibro.com/libro-codigo-limpio/9788441532106/2007424)*
G> - *[Sams Teach Yourself Node.js in 24 Hours by George Ornbo](https://www.amazon.es/dp/B0096C9C0M/ref=dp-kindle-redirect?_encoding=UTF8&btkr=1)*
G> - *[Learning JavaScript Design Pattern by Addy Osmani](http://addyosmani.com/resources/essentialjsdesignpatterns/book/)*

## Ampliar horizontes

Esperamos que este libro os haya resultado de utilidad y que os haya ayudado a empezar a recorrer el largo camino del desarrollador web.

Os proponemos algunas ideas para que podáis seguir creciendo y evolucionando, a pesar de que nuestra historia acaba aquí.

Está claro que la mejor manera de aprender un lenguaje de programación es practicando, practicando y seguir practicando...

Éstas son algunas formas sencillas pero efectivas de lograrlo:

### Aprender a utilizar Git y GitHub

Si queréis formar parte de la comunidad o entrar a trabajar en un entorno ágil, uno de los primeros pasos es aprender a manejaros con el control de versiones.

### Aprender un nuevo lenguaje

Puede parecer una locura empezar con otro lenguaje, pero cada lenguaje tiene algo único y un enfoque especial. Aprender más lenguajes os ayudará a pensar mucho más allá del lenguaje que uses. Lo que a la larga hará que seáis un mejores artesanos.

### Dominar un framework

Es una decisión complicada... un framework es un recurso, que puede ser difícil de aprender y en ocasiones tiene una vida útil muy corta. Gran parte del trabajo será elegir el framework que más os convenga. Es muy importante, tener en cuenta, que si es el primer framework... os enseñará una nueva forma de ver las cosas y de trabajar en JavaScript. No lo desaprovechéis, merece la pena emplear un poco más de tiempo en aprender nuevas formas de hacer las cosas.

### Familiarízate con las librerías más populares

JQuery puede ser un gran comienzo. Podéis adaptar librerías a JQuery o al revés, así rápidamente ganaréis soltura. Existen muchas otras librerías que deberíais conocer y que te harán la vida más fácil.

### Contribuye a mejorar las cosas

Puedes unirte a grupos de trabajo y organizaciones en Github e ir colaborando en alguno de los muchos proyectos que existen sobre JavaScript.

### Documentar no es una mala idea

Durante la lectura de este libro, espero que hayáis podido consultar la *[documentación de MDN](https://developer.mozilla.org/es/)* para poder aprender más sobre lo que os contábamos.... Recuerdar que esa documentación la crean muchos voluntarios, en todo el mundo, que entre otras cosas, la mejoran, amplían y traducen a diversos idiomas. No lo dudéis... **¡uniros!**

### Ayuda al prójimo

Seguro que has mirado -más de una vez- como se hace algo en *[Stackoverflow](http://stackoverflow.com/)*, *[Codepen](http://codepen.io/)*, foros especializados, comunidades, etc... Podéis también contribuir y ayudar a los demás, solucionando dudas. Al principio se hace muy cuesta arriba, pero luego es extraordinariamente atractivo. Y si no que le pregunten a *[Coma](http://stackoverflow.com/users/94144/coma)*.

### Guías de estilo

Adoptar una *[guía de estilos](http://es.stackoverflow.com/questions/22406/gu%C3%ADa-de-estilo-para-html-css-y-javascript)* ayudará no solo a consolidar una forma correcta y uniforme de desarrollar código en JavaScript si no que también os ayudará a gestionaros con *[La Ley de Parkinson de la Trivialidad](https://es.wikipedia.org/wiki/Ley_de_Parkinson_de_la_trivialidad)*.

Recomendamos usar *[Idiomatic.js](https://github.com/rwaldron/idiomatic.js/tree/master/translations/es_ES)* aunque existen muchas más como *[JavaScript Style Guide de Airbnb](https://github.com/airbnb/javascript)* y *[muchas más](http://noeticforce.com/best-javascript-style-guide-for-maintainable-code)*.
